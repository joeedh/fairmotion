
# template_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'template_validateleftCOMMAleftASSIGNASSIGNLSHIFTASSIGNRSHIFTASSIGNPLUSASSIGNMINUSASSIGNDIVIDEASSIGNTIMESASSIGNBORASSIGNBANDASSIGNBXORASSIGNMODleftQESTCOLONleftARROWleftBNEGATEleftLANDLORleftBANDBORBXORnonassocLTHANGTHANEQUALGTHANEQNOTEQUAL_STRICTEQUAL_STRICTLTHANEQNOTEQUALleftINSTANCEOFleftINleftLSHIFTRSHIFTLLSHIFTRRSHIFTleftPLUSMINUSleftTIMESDIVIDEleftEXPONENTrightUMINUSrightVAR_TYPE_PRECrightBITINVrightNOTrightTYPEOFleftLPARENleftLSBRACKETleftDECINCleftNEWleftDOTCOND_DOTALL ARROW ARROWPARENS ARROW_PRE ASSIGN ASSIGNBAND ASSIGNBOR ASSIGNBXOR ASSIGNDIVIDE ASSIGNLLSHIFT ASSIGNLSHIFT ASSIGNMINUS ASSIGNMOD ASSIGNPLUS ASSIGNRRSHIFT ASSIGNRSHIFT ASSIGNTIMES AWAIT BACKSLASH BAND BITINV BNEGATE BOR BREAK BXOR BYTE CASE CATCH CHAR CLASS CLOSECOM COLON COMMA COMMENT COND_DOT CONST CONTINUE DEC DEFAULT DELETE DIVIDE DO DOT DOUBLE ELSE EMPTYLINE EQUAL EQUAL_STRICT EXPONENT EXPORT EXTENDS FINALLY FOR FROM FUNCTION GET GLOBAL GTHAN GTHANEQ ID IF IMPORT IN INC INFERRED INSTANCEOF LAND LBRACKET LET LLSHIFT LOR LPAREN LSBRACKET LSHIFT LTHAN LTHANEQ MINUS MLSTRLIT MOD NATIVE NEW NOT NOTEQUAL NOTEQUAL_STRICT NUMBER OF OPENCOM PLUS QEST RBRACKET REGEXPR RETURN RPAREN RRSHIFT RSBRACKET RSHIFT SEMI SET SHORT SIGNED SLASHR STATIC STRINGLIT SWITCH TEMPLATE TEMPLATE_STR TGTHAN THROW TIMES TLTHAN TRIPLEDOT TRY TYPED TYPEOF VAR VARIABLE VAR_TYPE_PREC WHILE WITH YIELD newline statementlist : statement\n                    | statement_nonctrl\n                    | statementlist statement\n                    | statementlist statement_nonctrl \n                    | \n   push_scope :\n   pop_scope :\n   opt_colon_type : COLON var_type\n                     |\n  assign_statement : assign COLON var_type\n                      |\n  bracketed_statementlist : LBRACKET statementlist RBRACKET statement : function\n                | class\n                | typed_class\n                | if\n                | else\n                | while\n                | with\n                | dowhile\n                | for\n                | return SEMI\n                | yield SEMI\n                | break SEMI\n                | continue SEMI\n                | throw SEMI\n                | try\n                | catch\n                | finally\n                | switch\n                | func_native SEMI\n                | import_decl\n                | export_decl\n                | bracketed_statementlist\n  import_decl : IMPORT import_clause from_clause SEMI\n                 | IMPORT module_spec SEMI\n  import_clause : import_def_bind\n                   | name_space_import\n                   | named_imports\n                   | import_def_bind COMMA name_space_import\n                   | import_def_bind COMMA named_imports\n  import_def_bind : import_bind\n  name_space_import : TIMES ID import_bind named_imports : LBRACKET RBRACKET\n                    | LBRACKET import_list RBRACKET\n   from_clause : FROM module_spec import_list : import_spec\n                  | import_list COMMA import_spec\n  \n      import_spec : import_bind\n                  | ID ID import_bind\n   import_bind : binding_ident\n   module_spec : STRINGLIT\n   binding_ident : id\n   statement_nonctrl : expr SEMI\n                        | var_decl SEMI\n                        | funcref SEMI\n                        | SEMI\n                        | if\n                        | else\n                        | for\n                        | dowhile\n                        | while\n                        | return SEMI\n                        | yield SEMI\n                        | break SEMI\n                        | continue SEMI\n                        | throw SEMI\n                        | try\n                        | catch\n                        | finally\n                        | delete SEMI\n   var_decl_or_type : var_decl\n                       | var_type\n  \n    templatedeflist : var_type\n             | var_type ASSIGN var_type\n             | templatedeflist COMMA var_type\n             | templatedeflist COMMA var_type ASSIGN var_type\n  template : lthan_restrict templatedeflist gthan_restrict\n  type_modifiers : type_modifiers SIGNED\n                    | type_modifiers CONST\n                    | GLOBAL\n                    | VAR\n                    | CONST\n                    | LET\n                    | STATIC\n  left_id : id  id_opt : id\n             |\n  template_ref : lthan_restrict simple_templatedeflist gthan_restrict\n  template_ref_validate : lthan_restrict simple_templatedeflist gthan_restrict\n  template_validate : template\n                       | template_ref_validate\n  lthan_restrict : TLTHAN \n  gthan_restrict : TGTHAN \n  id_1 : id\n  var_decl_no_list : var_type\n                      | type_modifiers var_decl_no_list\n                      | var_decl_no_list ASSIGN expr\n  typescript_var_decl : ID\n                         | ID COLON var_type\n  var_decl : type_modifiers var_type\n              | type_modifiers var_expand\n              | var_decl ASSIGN expr\n              | var_decl COMMA id\n              | var_decl COMMA id ASSIGN expr\n  ident_arr : id\n               | ident_arr LSBRACKET NUMBER RSBRACKET\n  var_decl_with_arr : type_modifiers var_type ident_arr\n                       | var_decl_with_arr ASSIGN expr\n                       | var_decl_with_arr COMMA ident_arr\n                       | var_decl_with_arr COMMA ident_arr ASSIGN expr\n  id_var_type : id \n  id_var_decl : id \n  empty : empty\n           |\n  var_fancy_list : id\n                    | var_fancy_list COMMA id\n  var_fancy_array : LSBRACKET var_fancy_list RSBRACKETvar_fancy_object : LBRACKET var_fancy_list RBRACKETvar_expand : var_fancy_array\n                | var_fancy_object\n   var_type : var_type id_var_type\n               | id_var_type\n               | SHORT\n               | DOUBLE\n               | CHAR\n               | BYTE\n               | INFERRED\n               | var_type template_ref\n  typeof_opt : TYPEOF\n                |\n  \n    simple_templatedeflist : typeof_opt var_type\n                           | simple_templatedeflist COMMA typeof_opt var_type\n  simple_var_decl : VAR id\n                     | LET id\n                     | id\n  cmplx_assign : ASSIGNPLUS \n                  | ASSIGNMINUS \n                  | ASSIGNDIVIDE \n                  | ASSIGNTIMES\n                  | ASSIGNMOD\n                  | ASSIGNBOR \n                  | ASSIGNBAND \n                  | ASSIGNBXOR \n                  | ASSIGNLSHIFT\n                  | ASSIGNRSHIFT\n                  | ASSIGNRRSHIFT\n                  | ASSIGNLLSHIFT\n                  | ASSIGN\n   throw : THROW expr assign : expr cmplx_assign expr \n             | assign cmplx_assign expr\n             | expr\n             \n  exprlist : expr\n  typed_class : TYPED CLASS id template_opt typed_class_tail\n    typed_class_tail : typed_inherit_opt LBRACKET typed_class_body_opt RBRACKET\n  typed_class_body_opt : typed_class_list\n                          |\n  typed_class_list : typed_class_element\n                      | typed_class_list typed_class_element\n  typed_class_element : class_element\n                         | var_decl_with_arr SEMI\n  typed_inherit_opt : EXTENDS id\n                       |\n  class : CLASS id template_opt class_tailexprclass : CLASS id template_opt class_tailclass_tail : class_heritage_opt LBRACKET class_body_opt RBRACKETclass_parent_id : var_type\n                     | class_parent_id DOT var_type\n  class_list : class_parent_id\n                | class_list COMMA class_parent_id\n  class_heritage : EXTENDS class_listclass_heritage_opt : class_heritage\n                        | \n  class_body_opt : class_element_list\n                    |\n  class_element_list : class_element\n                        | class_element_list class_element\n  class_element : method_def\n  prefix_opt : STATIC\n                | GET\n                | SET\n                |\n  id_right : id %prec UMINUS\n   property_id : ID\n                  | GET\n                  | SET \n                  | FOR\n                  | WHILE\n                  | DO\n                  | NUMBER\n                  | IF\n                  | ELSE\n                  | VAR\n                  | CONST\n                  | LET\n                  | STATIC\n                  | YIELD\n                  | FUNCTION\n                  | RETURN\n                  | LSBRACKET expr RSBRACKET\n  property_id_right : property_id %prec UMINUS\n  property_id_opt : property_id property_id\n                       | property_id\n    star_opt : TIMES\n              |\n  method : star_opt property_id_opt LPAREN funcdeflist RPAREN func_type_opt LBRACKET statementlist_opt RBRACKETgetset_id : property_id\n               | NUMBER\n  method_def : method\n  \n    var_element : id %prec VAR_TYPE_PREC\n                | SHORT %prec VAR_TYPE_PREC\n                | DOUBLE %prec VAR_TYPE_PREC\n                | CHAR %prec VAR_TYPE_PREC\n                | BYTE %prec VAR_TYPE_PREC\n                | id template_ref %prec VAR_TYPE_PREC\n  \n      var_type2 : var_element\n             \n  class_property : var_type2 id\n                    | class_property ASSIGN expr\n                    | class_property COMMA id\n                    | class_property COMMA id ASSIGN expr\n  \n    setter_param_list : var_type_opt id\n                      | var_type\n  template_ref_opt : template_ref\n                      |\n   func_call : template_ref_opt LPAREN exprlist RPAREN\n                 | template_ref_opt LPAREN TRIPLEDOT binding_ident RPAREN\n                 | template_ref_opt LPAREN expr COMMA TRIPLEDOT binding_ident RPAREN\n                 | template_ref_opt LPAREN RPAREN\n  \n    funcdeflist : var_decl_no_list\n                | funcdeflist COMMA var_decl_no_list\n                | typescript_var_decl\n                | funcdeflist COMMA typescript_var_decl\n                |\n  template_opt : template\n                  |\n   func_type_opt : COLON var_type_opt \n                    |\n   funcref : FUNCTION star_opt id template_opt push_scope LPAREN funcdeflist RPAREN func_type_opt\n   func_native : NATIVE push_scope FUNCTION id template_opt LPAREN funcdeflist RPAREN func_type_opt\n   function : FUNCTION star_opt id template_opt push_scope LPAREN funcdeflist RPAREN func_type_opt LBRACKET statementlist_opt RBRACKET\n  lbracket_restrict : LBRACKETrbracket_restrict : RBRACKETvar_type_opt : var_type\n                  |\n   colon_opt : COLON\n                |\n   func_name_opt : ID\n                    | SET\n                    | GET\n                    | SHORT\n                    | DOUBLE\n                    | TYPED\n                    |\n   func_name     : ID\n                    | SET\n                    | GET\n                    | SHORT\n                    | DOUBLE\n                    | TYPED\n   exprfunction : FUNCTION star_opt func_name_opt template_opt push_scope LPAREN funcdeflist RPAREN colon_opt var_type_opt lbracket_restrict statementlist_opt rbracket_restrict\n                   | FUNCTION star_opt func_name_opt template_opt push_scope LPAREN RPAREN colon_opt var_type_opt lbracket_restrict statementlist_opt rbracket_restrict\n  comma_opt : COMMA\n               |\n  expr_for_arraylit : expr_no_list\n                       | obj_literal\n  arraylist : expr_for_arraylit\n               | arraylist expr_for_arraylit\n               | arraylist COMMA\n  array_literal : LSBRACKET arraylist RSBRACKET\n                   | LSBRACKET RSBRACKET\n  id_str_or_num : id\n               | NUMBER\n               | STRINGLIT\n  typeof : TYPEOF expr\n  typeof_no_list : TYPEOF expr_no_list\n  \n      objlit_key : id_str_or_num\n                 | LSBRACKET expr RSBRACKET\n    \n    obj_lit_list : objlit_key COLON expr\n                 | objlit_function\n                 | obj_lit_list COMMA objlit_function\n                 | obj_lit_list COMMA objlit_key COLON expr\n                 | obj_lit_list COMMA\n  obj_literal : lbracket_restrict push_scope obj_lit_list rbracket_restrict\n                    | lbracket_restrict rbracket_restrict\n  star_opt_2 : \n                 | TIMES\n   objlit_function : TIMES func_name LPAREN funcdeflist RPAREN lbracket_restrict statementlist_opt rbracket_restrict\n                      | func_name LPAREN funcdeflist RPAREN lbracket_restrict statementlist_opt rbracket_restrict\n  delete : DELETE expr\n  new : NEW expr\n  new_no_list : NEW expr_no_list\n  inc_no_list : expr_no_list INC\n                 | INC expr_no_list\n  dec : expr DEC\n         | DEC expr\n  not : NOT exprinc : expr INC\n         | INC expr\n  dec_no_list : expr_no_list DEC\n                 | DEC expr_no_list\n  not_no_list : NOT expr_no_listbitinv_no_list : BITINV expr_no_listbitinv : BITINV exprstrlit : STRINGLIT lparen_restrict : LPAREN\n   rparen_restrict : RPAREN\n   lsbracket_restrict : LSBRACKET\n   rsbracket_restrict : RSBRACKET\n  concise_body : expr_no_list\n                  | LBRACKET statementlist_opt RBRACKET\n                    \n  arrowparamlist_opt : var_decl_no_list\n                        | arrowparamlist_opt COMMA var_decl_no_list\n                        |\n  \n    arrow_paramlist : RPAREN expr LPAREN\n  \n    arrow_function : ARROW_PRE arrowparamlist_opt RPAREN ARROW concise_body\n                   | ID ARROW concise_body\n  expr : NUMBER\n            | strlit\n            | id\n            | id template_ref\n            | template_ref\n            | array_literal\n            | arrow_function\n            | exprfunction\n            | exprclass\n            | obj_literal\n            | expr cmplx_assign expr\n            | expr cmplx_assign expr COLON var_type SEMI\n            | expr RSHIFT expr\n            | expr LSHIFT expr\n            | expr EXPONENT expr\n            | expr LLSHIFT expr\n            | expr RRSHIFT expr\n            | expr COND_DOT expr\n            | expr DOT expr\n            | expr DOT DELETE\n            | expr LAND expr\n            | expr LOR expr\n            | expr BOR expr\n            | expr INSTANCEOF expr\n            | expr BXOR expr\n            | expr BAND expr\n            | expr EQUAL expr\n            | expr EQUAL_STRICT expr\n            | expr NOTEQUAL_STRICT expr\n            | expr GTHAN expr\n            | expr GTHANEQ expr\n            | expr LTHAN expr\n            | expr MOD expr\n            | expr LTHANEQ expr\n            | expr NOTEQUAL expr\n            | expr PLUS expr\n            | expr MINUS expr\n            | expr DIVIDE expr\n            | expr TIMES expr\n            | expr IN expr\n            | expr func_call\n            | expr lsbracket_restrict expr rsbracket_restrict\n            | expr QEST expr COLON expr\n            | expr COMMA expr\n            | lparen_restrict expr rparen_restrict\n            | expr_uminus\n            | expr_uplus\n            | not\n            | bitinv\n            | new\n            | inc\n            | dec\n            | typeof\n            | re_lit\n    expr_no_list : NUMBER\n            | strlit\n            | id\n            | array_literal\n            | exprfunction\n            | exprclass\n            | expr_no_list cmplx_assign expr_no_list\n            | expr_no_list RSHIFT expr_no_list\n            | expr_no_list LSHIFT expr_no_list\n            | expr_no_list LLSHIFT expr_no_list\n            | expr_no_list RRSHIFT expr_no_list\n            | expr_no_list COND_DOT expr_no_list\n            | expr_no_list DOT expr_no_list\n            | expr_no_list EXPONENT expr_no_list\n            | expr_no_list LAND expr_no_list\n            | expr_no_list LOR expr_no_list\n            | expr_no_list BOR expr_no_list\n            | expr_no_list INSTANCEOF expr_no_list\n            | expr_no_list BXOR expr_no_list\n            | expr_no_list BAND expr_no_list\n            | expr_no_list EQUAL expr_no_list\n            | expr_no_list EQUAL_STRICT expr_no_list\n            | expr_no_list NOTEQUAL_STRICT expr_no_list\n            | expr_no_list GTHAN expr_no_list\n            | expr_no_list GTHANEQ expr_no_list\n            | expr_no_list LTHAN expr_no_list\n            | expr_no_list MOD expr_no_list\n            | expr_no_list LTHANEQ expr_no_list\n            | expr_no_list NOTEQUAL expr_no_list\n            | expr_no_list PLUS expr_no_list\n            | expr_no_list MINUS expr_no_list\n            | expr_no_list DIVIDE expr_no_list\n            | expr_no_list TIMES expr_no_list\n            | expr_no_list IN expr_no_list\n            | expr_no_list func_call\n            | expr_no_list lsbracket_restrict expr rsbracket_restrict\n            | expr_no_list QEST expr_no_list COLON expr_no_list\n            | lparen_restrict expr rparen_restrict\n            | expr_no_list_uminus\n            | expr_no_list_uplus\n            | not_no_list\n            | bitinv_no_list\n            | new_no_list\n            | inc_no_list\n            | dec_no_list\n            | typeof_no_list\n            | re_lit\n    expr_uplus : PLUS expr %prec UMINUS\n    expr_no_list_uplus : PLUS expr_no_list %prec UMINUS\n    expr_uminus : MINUS expr %prec UMINUS\n    expr_no_list_uminus : MINUS expr_no_list %prec UMINUS\n    paren_expr : LPAREN expr RPAREN\n                | LPAREN RPAREN\n  assign_opt : assign\n                 |\n  expr_opt : expr\n              |\n  re_lit : REGEXPR\n  \n    simple_var_decl_strict : VAR id\n                           | LET id\n  for_var_decl : expr_opt\n                  | simple_var_decl_strict\n                  | simple_var_decl_strict ASSIGN expr\n  in_or_of : IN\n              | OF\n  \n  for_of_expand : type_modifiers var_expand OF expr\n  \n    for_decl : for_var_decl SEMI expr_opt SEMI expr_opt\n             | id in_or_of expr\n             | simple_var_decl in_or_of expr\n             | for_of_expand\n  loop_label_opt : \n                    | ID COLON\n  for : loop_label_opt FOR LPAREN for_decl RPAREN statement_nonctrl\n         | loop_label_opt FOR LPAREN for_decl RPAREN LBRACKET statementlist_opt RBRACKET\n   ctrl_statement : statement_nonctrl\n                     | LBRACKET statementlist_opt RBRACKET\n                     | SEMI\n  dowhile : loop_label_opt DO ctrl_statement WHILE paren_expr\n  while : loop_label_opt WHILE paren_expr statement_nonctrl\n           | loop_label_opt WHILE paren_expr LBRACKET statementlist_opt RBRACKET\n  default_case : DEFAULT COLON statementlist\n  statementlist_opt : statementlist\n                       |\n  case_clause : CASE expr COLON statementlist_opt\n  case_clauses : case_clause\n                  | case_clauses case_clause\n  case_clauses_opt : case_clauses\n                      |\n  case_block : case_clauses\n                | case_clauses_opt default_case case_clauses_opt\n  switch : SWITCH paren_expr LBRACKET case_block RBRACKET\n  with : WITH paren_expr ctrl_statement\n  if : IF paren_expr ctrl_statement\n  try : TRY statement_nonctrl\n         | TRY LBRACKET statementlist RBRACKET\n         | TRY LBRACKET RBRACKET\n  finally : FINALLY  LBRACKET statementlist_opt RBRACKET\n  export_decl : EXPORT TIMES from_clause SEMI\n                 | EXPORT export_clause from_clause SEMI\n                 | EXPORT export_clause SEMI\n                 | EXPORT var_decl SEMI\n                 | EXPORT function\n                 | EXPORT class\n                 | EXPORT DEFAULT function\n                 | EXPORT DEFAULT class\n                 | EXPORT DEFAULT assign\n  export_clause : LBRACKET RBRACKET\n                   | LBRACKET exports_list RBRACKET\n                   | LBRACKET exports_list COMMA RBRACKET\n   exports_list : export_spec\n                   | exports_list COMMA export_spec\n   export_spec : ID\n                  | ID ID ID\n  catch_tok : CATCHcatch : catch_tok paren_expr statement_nonctrl\n           | catch_tok paren_expr LBRACKET statementlist RBRACKET\n  else : ELSE ctrl_statement\n  break : BREAK \n           | BREAK ID\n  continue : CONTINUE \n              | CONTINUE ID\n  return : RETURN expr\n            | RETURN\n  yield : YIELD expr\n            | YIELD id : ID\n         | GET\n         | SET\n         | STATIC\n         | CATCH\n         | GLOBAL\n         | AWAIT\n  '
    
_lr_action_items = {'TLTHAN':([0,8,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,31,32,34,35,37,40,41,42,],[5,5,-123,-124,-125,-126,-127,-128,-112,-497,-498,-499,-500,-501,-502,-503,-94,-122,-129,5,5,5,5,-89,5,]),'$end':([1,2,3,25,27,28,],[0,-91,-92,-78,-94,-90,]),'SHORT':([4,5,9,16,26,29,30,33,36,39,],[11,-93,11,-130,11,-131,11,-131,11,11,]),'DOUBLE':([4,5,9,16,26,29,30,33,36,39,],[12,-93,12,-130,12,-131,12,-131,12,12,]),'CHAR':([4,5,9,16,26,29,30,33,36,39,],[13,-93,13,-130,13,-131,13,-131,13,13,]),'BYTE':([4,5,9,16,26,29,30,33,36,39,],[14,-93,14,-130,14,-131,14,-131,14,14,]),'INFERRED':([4,5,9,16,26,29,30,33,36,39,],[15,-93,15,-130,15,-131,15,-131,15,15,]),'TYPEOF':([4,5,29,33,],[16,-93,16,16,]),'ID':([4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,],[18,-93,18,18,-123,-124,-125,-126,-127,-128,-130,-112,-497,-498,-499,-500,-501,-502,-503,18,-94,-131,18,-122,-129,-131,18,18,18,18,18,18,-89,18,]),'GET':([4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,],[19,-93,19,19,-123,-124,-125,-126,-127,-128,-130,-112,-497,-498,-499,-500,-501,-502,-503,19,-94,-131,19,-122,-129,-131,19,19,19,19,19,19,-89,19,]),'SET':([4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,],[20,-93,20,20,-123,-124,-125,-126,-127,-128,-130,-112,-497,-498,-499,-500,-501,-502,-503,20,-94,-131,20,-122,-129,-131,20,20,20,20,20,20,-89,20,]),'STATIC':([4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,],[21,-93,21,21,-123,-124,-125,-126,-127,-128,-130,-112,-497,-498,-499,-500,-501,-502,-503,21,-94,-131,21,-122,-129,-131,21,21,21,21,21,21,-89,21,]),'CATCH':([4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,],[22,-93,22,22,-123,-124,-125,-126,-127,-128,-130,-112,-497,-498,-499,-500,-501,-502,-503,22,-94,-131,22,-122,-129,-131,22,22,22,22,22,22,-89,22,]),'GLOBAL':([4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,],[23,-93,23,23,-123,-124,-125,-126,-127,-128,-130,-112,-497,-498,-499,-500,-501,-502,-503,23,-94,-131,23,-122,-129,-131,23,23,23,23,23,23,-89,23,]),'AWAIT':([4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,],[24,-93,24,24,-123,-124,-125,-126,-127,-128,-130,-112,-497,-498,-499,-500,-501,-502,-503,24,-94,-131,24,-122,-129,-131,24,24,24,24,24,24,-89,24,]),'COMMA':([6,7,8,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,31,32,34,35,37,38,40,41,42,],[26,29,-74,-123,-124,-125,-126,-127,-128,-112,-497,-498,-499,-500,-501,-502,-503,-94,-122,-129,-132,-76,-75,29,-133,-89,-77,]),'TGTHAN':([6,7,8,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,31,32,34,35,37,38,40,41,42,],[27,27,-74,-123,-124,-125,-126,-127,-128,-112,-497,-498,-499,-500,-501,-502,-503,-94,-122,-129,-132,-76,-75,27,-133,-89,-77,]),'ASSIGN':([8,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,31,32,35,41,],[30,-123,-124,-125,-126,-127,-128,-112,-497,-498,-499,-500,-501,-502,-503,-94,-122,-129,39,-89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'template_validate':([0,],[1,]),'template':([0,],[2,]),'template_ref_validate':([0,],[3,]),'lthan_restrict':([0,8,34,35,37,40,42,],[4,33,33,33,33,33,33,]),'templatedeflist':([4,],[6,]),'simple_templatedeflist':([4,33,],[7,38,]),'var_type':([4,9,26,30,36,39,],[8,34,35,37,40,42,]),'typeof_opt':([4,29,33,],[9,36,9,]),'id_var_type':([4,8,9,26,30,34,35,36,37,39,40,42,],[10,31,10,10,10,31,31,10,31,10,31,31,]),'id':([4,8,9,26,30,34,35,36,37,39,40,42,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'gthan_restrict':([6,7,38,],[25,28,41,]),'template_ref':([8,34,35,37,40,42,],[32,32,32,32,32,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> template_validate","S'",1,None,None,None),
  ('statementlist -> statement','statementlist',1,'p_statementlist','js_parse.py',328),
  ('statementlist -> statement_nonctrl','statementlist',1,'p_statementlist','js_parse.py',329),
  ('statementlist -> statementlist statement','statementlist',2,'p_statementlist','js_parse.py',330),
  ('statementlist -> statementlist statement_nonctrl','statementlist',2,'p_statementlist','js_parse.py',331),
  ('statementlist -> <empty>','statementlist',0,'p_statementlist','js_parse.py',332),
  ('push_scope -> <empty>','push_scope',0,'p_push_scope','js_parse.py',352),
  ('pop_scope -> <empty>','pop_scope',0,'p_pop_scope','js_parse.py',357),
  ('opt_colon_type -> COLON var_type','opt_colon_type',2,'p_opt_colon_type','js_parse.py',362),
  ('opt_colon_type -> <empty>','opt_colon_type',0,'p_opt_colon_type','js_parse.py',363),
  ('assign_statement -> assign COLON var_type','assign_statement',3,'p_assign_statement','js_parse.py',369),
  ('assign_statement -> <empty>','assign_statement',0,'p_assign_statement','js_parse.py',370),
  ('bracketed_statementlist -> LBRACKET statementlist RBRACKET','bracketed_statementlist',3,'p_bracketed_statementlist','js_parse.py',377),
  ('statement -> function','statement',1,'p_statement','js_parse.py',381),
  ('statement -> class','statement',1,'p_statement','js_parse.py',382),
  ('statement -> typed_class','statement',1,'p_statement','js_parse.py',383),
  ('statement -> if','statement',1,'p_statement','js_parse.py',384),
  ('statement -> else','statement',1,'p_statement','js_parse.py',385),
  ('statement -> while','statement',1,'p_statement','js_parse.py',386),
  ('statement -> with','statement',1,'p_statement','js_parse.py',387),
  ('statement -> dowhile','statement',1,'p_statement','js_parse.py',388),
  ('statement -> for','statement',1,'p_statement','js_parse.py',389),
  ('statement -> return SEMI','statement',2,'p_statement','js_parse.py',390),
  ('statement -> yield SEMI','statement',2,'p_statement','js_parse.py',391),
  ('statement -> break SEMI','statement',2,'p_statement','js_parse.py',392),
  ('statement -> continue SEMI','statement',2,'p_statement','js_parse.py',393),
  ('statement -> throw SEMI','statement',2,'p_statement','js_parse.py',394),
  ('statement -> try','statement',1,'p_statement','js_parse.py',395),
  ('statement -> catch','statement',1,'p_statement','js_parse.py',396),
  ('statement -> finally','statement',1,'p_statement','js_parse.py',397),
  ('statement -> switch','statement',1,'p_statement','js_parse.py',398),
  ('statement -> func_native SEMI','statement',2,'p_statement','js_parse.py',399),
  ('statement -> import_decl','statement',1,'p_statement','js_parse.py',400),
  ('statement -> export_decl','statement',1,'p_statement','js_parse.py',401),
  ('statement -> bracketed_statementlist','statement',1,'p_statement','js_parse.py',402),
  ('import_decl -> IMPORT import_clause from_clause SEMI','import_decl',4,'p_import_decl','js_parse.py',415),
  ('import_decl -> IMPORT module_spec SEMI','import_decl',3,'p_import_decl','js_parse.py',416),
  ('import_clause -> import_def_bind','import_clause',1,'p_import_clause','js_parse.py',429),
  ('import_clause -> name_space_import','import_clause',1,'p_import_clause','js_parse.py',430),
  ('import_clause -> named_imports','import_clause',1,'p_import_clause','js_parse.py',431),
  ('import_clause -> import_def_bind COMMA name_space_import','import_clause',3,'p_import_clause','js_parse.py',432),
  ('import_clause -> import_def_bind COMMA named_imports','import_clause',3,'p_import_clause','js_parse.py',433),
  ('import_def_bind -> import_bind','import_def_bind',1,'p_import_def_bind','js_parse.py',453),
  ('name_space_import -> TIMES ID import_bind','name_space_import',3,'p_name_space_import','js_parse.py',463),
  ('named_imports -> LBRACKET RBRACKET','named_imports',2,'p_named_imports','js_parse.py',472),
  ('named_imports -> LBRACKET import_list RBRACKET','named_imports',3,'p_named_imports','js_parse.py',473),
  ('from_clause -> FROM module_spec','from_clause',2,'p_from_clause','js_parse.py',481),
  ('import_list -> import_spec','import_list',1,'p_import_list','js_parse.py',485),
  ('import_list -> import_list COMMA import_spec','import_list',3,'p_import_list','js_parse.py',486),
  ('import_spec -> import_bind','import_spec',1,'p_import_spec','js_parse.py',497),
  ('import_spec -> ID ID import_bind','import_spec',3,'p_import_spec','js_parse.py',498),
  ('import_bind -> binding_ident','import_bind',1,'p_import_bind','js_parse.py',513),
  ('module_spec -> STRINGLIT','module_spec',1,'p_module_spec','js_parse.py',518),
  ('binding_ident -> id','binding_ident',1,'p_binding_ident','js_parse.py',528),
  ('statement_nonctrl -> expr SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',551),
  ('statement_nonctrl -> var_decl SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',552),
  ('statement_nonctrl -> funcref SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',553),
  ('statement_nonctrl -> SEMI','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',554),
  ('statement_nonctrl -> if','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',555),
  ('statement_nonctrl -> else','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',556),
  ('statement_nonctrl -> for','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',557),
  ('statement_nonctrl -> dowhile','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',558),
  ('statement_nonctrl -> while','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',559),
  ('statement_nonctrl -> return SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',560),
  ('statement_nonctrl -> yield SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',561),
  ('statement_nonctrl -> break SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',562),
  ('statement_nonctrl -> continue SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',563),
  ('statement_nonctrl -> throw SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',564),
  ('statement_nonctrl -> try','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',565),
  ('statement_nonctrl -> catch','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',566),
  ('statement_nonctrl -> finally','statement_nonctrl',1,'p_statement_nonctrl','js_parse.py',567),
  ('statement_nonctrl -> delete SEMI','statement_nonctrl',2,'p_statement_nonctrl','js_parse.py',568),
  ('var_decl_or_type -> var_decl','var_decl_or_type',1,'p_var_decl_or_type','js_parse.py',597),
  ('var_decl_or_type -> var_type','var_decl_or_type',1,'p_var_decl_or_type','js_parse.py',598),
  ('templatedeflist -> var_type','templatedeflist',1,'p_templatedeflist','js_parse.py',606),
  ('templatedeflist -> var_type ASSIGN var_type','templatedeflist',3,'p_templatedeflist','js_parse.py',607),
  ('templatedeflist -> templatedeflist COMMA var_type','templatedeflist',3,'p_templatedeflist','js_parse.py',608),
  ('templatedeflist -> templatedeflist COMMA var_type ASSIGN var_type','templatedeflist',5,'p_templatedeflist','js_parse.py',609),
  ('template -> lthan_restrict templatedeflist gthan_restrict','template',3,'p_template','js_parse.py',628),
  ('type_modifiers -> type_modifiers SIGNED','type_modifiers',2,'p_type_modifiers','js_parse.py',635),
  ('type_modifiers -> type_modifiers CONST','type_modifiers',2,'p_type_modifiers','js_parse.py',636),
  ('type_modifiers -> GLOBAL','type_modifiers',1,'p_type_modifiers','js_parse.py',637),
  ('type_modifiers -> VAR','type_modifiers',1,'p_type_modifiers','js_parse.py',638),
  ('type_modifiers -> CONST','type_modifiers',1,'p_type_modifiers','js_parse.py',639),
  ('type_modifiers -> LET','type_modifiers',1,'p_type_modifiers','js_parse.py',640),
  ('type_modifiers -> STATIC','type_modifiers',1,'p_type_modifiers','js_parse.py',641),
  ('left_id -> id','left_id',1,'p_left_id','js_parse.py',659),
  ('id_opt -> id','id_opt',1,'p_id_opt','js_parse.py',663),
  ('id_opt -> <empty>','id_opt',0,'p_id_opt','js_parse.py',664),
  ('template_ref -> lthan_restrict simple_templatedeflist gthan_restrict','template_ref',3,'p_template_ref','js_parse.py',670),
  ('template_ref_validate -> lthan_restrict simple_templatedeflist gthan_restrict','template_ref_validate',3,'p_template_ref_validate','js_parse.py',675),
  ('template_validate -> template','template_validate',1,'p_template_validate','js_parse.py',681),
  ('template_validate -> template_ref_validate','template_validate',1,'p_template_validate','js_parse.py',682),
  ('lthan_restrict -> TLTHAN','lthan_restrict',1,'p_lthan_restrict','js_parse.py',689),
  ('gthan_restrict -> TGTHAN','gthan_restrict',1,'p_gthan_restrict','js_parse.py',705),
  ('id_1 -> id','id_1',1,'p_id1','js_parse.py',713),
  ('var_decl_no_list -> var_type','var_decl_no_list',1,'p_var_decl_no_list','js_parse.py',719),
  ('var_decl_no_list -> type_modifiers var_decl_no_list','var_decl_no_list',2,'p_var_decl_no_list','js_parse.py',720),
  ('var_decl_no_list -> var_decl_no_list ASSIGN expr','var_decl_no_list',3,'p_var_decl_no_list','js_parse.py',721),
  ('typescript_var_decl -> ID','typescript_var_decl',1,'p_typescript_var_decl','js_parse.py',770),
  ('typescript_var_decl -> ID COLON var_type','typescript_var_decl',3,'p_typescript_var_decl','js_parse.py',771),
  ('var_decl -> type_modifiers var_type','var_decl',2,'p_var_decl','js_parse.py',788),
  ('var_decl -> type_modifiers var_expand','var_decl',2,'p_var_decl','js_parse.py',789),
  ('var_decl -> var_decl ASSIGN expr','var_decl',3,'p_var_decl','js_parse.py',790),
  ('var_decl -> var_decl COMMA id','var_decl',3,'p_var_decl','js_parse.py',791),
  ('var_decl -> var_decl COMMA id ASSIGN expr','var_decl',5,'p_var_decl','js_parse.py',792),
  ('ident_arr -> id','ident_arr',1,'p_ident_arr','js_parse.py',882),
  ('ident_arr -> ident_arr LSBRACKET NUMBER RSBRACKET','ident_arr',4,'p_ident_arr','js_parse.py',883),
  ('var_decl_with_arr -> type_modifiers var_type ident_arr','var_decl_with_arr',3,'p_var_decl_with_arr','js_parse.py',893),
  ('var_decl_with_arr -> var_decl_with_arr ASSIGN expr','var_decl_with_arr',3,'p_var_decl_with_arr','js_parse.py',894),
  ('var_decl_with_arr -> var_decl_with_arr COMMA ident_arr','var_decl_with_arr',3,'p_var_decl_with_arr','js_parse.py',895),
  ('var_decl_with_arr -> var_decl_with_arr COMMA ident_arr ASSIGN expr','var_decl_with_arr',5,'p_var_decl_with_arr','js_parse.py',896),
  ('id_var_type -> id','id_var_type',1,'p_id_var_type','js_parse.py',953),
  ('id_var_decl -> id','id_var_decl',1,'p_id_var_decl','js_parse.py',959),
  ('empty -> empty','empty',1,'p_empty','js_parse.py',965),
  ('empty -> <empty>','empty',0,'p_empty','js_parse.py',966),
  ('var_fancy_list -> id','var_fancy_list',1,'p_var_fancy_list','js_parse.py',971),
  ('var_fancy_list -> var_fancy_list COMMA id','var_fancy_list',3,'p_var_fancy_list','js_parse.py',972),
  ('var_fancy_array -> LSBRACKET var_fancy_list RSBRACKET','var_fancy_array',3,'p_var_fancy_array','js_parse.py',987),
  ('var_fancy_object -> LBRACKET var_fancy_list RBRACKET','var_fancy_object',3,'p_var_fancy_object','js_parse.py',992),
  ('var_expand -> var_fancy_array','var_expand',1,'p_var_expand','js_parse.py',998),
  ('var_expand -> var_fancy_object','var_expand',1,'p_var_expand','js_parse.py',999),
  ('var_type -> var_type id_var_type','var_type',2,'p_var_type','js_parse.py',1004),
  ('var_type -> id_var_type','var_type',1,'p_var_type','js_parse.py',1005),
  ('var_type -> SHORT','var_type',1,'p_var_type','js_parse.py',1006),
  ('var_type -> DOUBLE','var_type',1,'p_var_type','js_parse.py',1007),
  ('var_type -> CHAR','var_type',1,'p_var_type','js_parse.py',1008),
  ('var_type -> BYTE','var_type',1,'p_var_type','js_parse.py',1009),
  ('var_type -> INFERRED','var_type',1,'p_var_type','js_parse.py',1010),
  ('var_type -> var_type template_ref','var_type',2,'p_var_type','js_parse.py',1011),
  ('typeof_opt -> TYPEOF','typeof_opt',1,'p_typeof_opt','js_parse.py',1057),
  ('typeof_opt -> <empty>','typeof_opt',0,'p_typeof_opt','js_parse.py',1058),
  ('simple_templatedeflist -> typeof_opt var_type','simple_templatedeflist',2,'p_simple_templatedeflist','js_parse.py',1066),
  ('simple_templatedeflist -> simple_templatedeflist COMMA typeof_opt var_type','simple_templatedeflist',4,'p_simple_templatedeflist','js_parse.py',1067),
  ('simple_var_decl -> VAR id','simple_var_decl',2,'p_simple_var_decl','js_parse.py',1087),
  ('simple_var_decl -> LET id','simple_var_decl',2,'p_simple_var_decl','js_parse.py',1088),
  ('simple_var_decl -> id','simple_var_decl',1,'p_simple_var_decl','js_parse.py',1089),
  ('cmplx_assign -> ASSIGNPLUS','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1110),
  ('cmplx_assign -> ASSIGNMINUS','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1111),
  ('cmplx_assign -> ASSIGNDIVIDE','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1112),
  ('cmplx_assign -> ASSIGNTIMES','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1113),
  ('cmplx_assign -> ASSIGNMOD','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1114),
  ('cmplx_assign -> ASSIGNBOR','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1115),
  ('cmplx_assign -> ASSIGNBAND','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1116),
  ('cmplx_assign -> ASSIGNBXOR','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1117),
  ('cmplx_assign -> ASSIGNLSHIFT','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1118),
  ('cmplx_assign -> ASSIGNRSHIFT','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1119),
  ('cmplx_assign -> ASSIGNRRSHIFT','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1120),
  ('cmplx_assign -> ASSIGNLLSHIFT','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1121),
  ('cmplx_assign -> ASSIGN','cmplx_assign',1,'p_cmplx_assign','js_parse.py',1122),
  ('throw -> THROW expr','throw',2,'p_throw','js_parse.py',1129),
  ('assign -> expr cmplx_assign expr','assign',3,'p_assign','js_parse.py',1134),
  ('assign -> assign cmplx_assign expr','assign',3,'p_assign','js_parse.py',1135),
  ('assign -> expr','assign',1,'p_assign','js_parse.py',1136),
  ('exprlist -> expr','exprlist',1,'p_exprlist','js_parse.py',1152),
  ('typed_class -> TYPED CLASS id template_opt typed_class_tail','typed_class',5,'p_typed_class','js_parse.py',1195),
  ('typed_class_tail -> typed_inherit_opt LBRACKET typed_class_body_opt RBRACKET','typed_class_tail',4,'p_typed_class_tail','js_parse.py',1210),
  ('typed_class_body_opt -> typed_class_list','typed_class_body_opt',1,'p_typed_class_body_opt','js_parse.py',1216),
  ('typed_class_body_opt -> <empty>','typed_class_body_opt',0,'p_typed_class_body_opt','js_parse.py',1217),
  ('typed_class_list -> typed_class_element','typed_class_list',1,'p_typed_class_list','js_parse.py',1223),
  ('typed_class_list -> typed_class_list typed_class_element','typed_class_list',2,'p_typed_class_list','js_parse.py',1224),
  ('typed_class_element -> class_element','typed_class_element',1,'p_typed_class_element','js_parse.py',1247),
  ('typed_class_element -> var_decl_with_arr SEMI','typed_class_element',2,'p_typed_class_element','js_parse.py',1248),
  ('typed_inherit_opt -> EXTENDS id','typed_inherit_opt',2,'p_typed_inherit_opt','js_parse.py',1254),
  ('typed_inherit_opt -> <empty>','typed_inherit_opt',0,'p_typed_inherit_opt','js_parse.py',1255),
  ('class -> CLASS id template_opt class_tail','class',4,'p_class','js_parse.py',1266),
  ('exprclass -> CLASS id template_opt class_tail','exprclass',4,'p_exprclass','js_parse.py',1281),
  ('class_tail -> class_heritage_opt LBRACKET class_body_opt RBRACKET','class_tail',4,'p_class_tail','js_parse.py',1296),
  ('class_parent_id -> var_type','class_parent_id',1,'p_class_parent_id','js_parse.py',1306),
  ('class_parent_id -> class_parent_id DOT var_type','class_parent_id',3,'p_class_parent_id','js_parse.py',1307),
  ('class_list -> class_parent_id','class_list',1,'p_class_list','js_parse.py',1316),
  ('class_list -> class_list COMMA class_parent_id','class_list',3,'p_class_list','js_parse.py',1317),
  ('class_heritage -> EXTENDS class_list','class_heritage',2,'p_class_heritage','js_parse.py',1330),
  ('class_heritage_opt -> class_heritage','class_heritage_opt',1,'p_class_heritage_opt','js_parse.py',1338),
  ('class_heritage_opt -> <empty>','class_heritage_opt',0,'p_class_heritage_opt','js_parse.py',1339),
  ('class_body_opt -> class_element_list','class_body_opt',1,'p_class_body_opt','js_parse.py',1347),
  ('class_body_opt -> <empty>','class_body_opt',0,'p_class_body_opt','js_parse.py',1348),
  ('class_element_list -> class_element','class_element_list',1,'p_class_element_list','js_parse.py',1361),
  ('class_element_list -> class_element_list class_element','class_element_list',2,'p_class_element_list','js_parse.py',1362),
  ('class_element -> method_def','class_element',1,'p_class_element','js_parse.py',1373),
  ('prefix_opt -> STATIC','prefix_opt',1,'p_prefix_opt','js_parse.py',1381),
  ('prefix_opt -> GET','prefix_opt',1,'p_prefix_opt','js_parse.py',1382),
  ('prefix_opt -> SET','prefix_opt',1,'p_prefix_opt','js_parse.py',1383),
  ('prefix_opt -> <empty>','prefix_opt',0,'p_prefix_opt','js_parse.py',1384),
  ('id_right -> id','id_right',1,'p_id_right','js_parse.py',1391),
  ('property_id -> ID','property_id',1,'p_property_id','js_parse.py',1397),
  ('property_id -> GET','property_id',1,'p_property_id','js_parse.py',1398),
  ('property_id -> SET','property_id',1,'p_property_id','js_parse.py',1399),
  ('property_id -> FOR','property_id',1,'p_property_id','js_parse.py',1400),
  ('property_id -> WHILE','property_id',1,'p_property_id','js_parse.py',1401),
  ('property_id -> DO','property_id',1,'p_property_id','js_parse.py',1402),
  ('property_id -> NUMBER','property_id',1,'p_property_id','js_parse.py',1403),
  ('property_id -> IF','property_id',1,'p_property_id','js_parse.py',1404),
  ('property_id -> ELSE','property_id',1,'p_property_id','js_parse.py',1405),
  ('property_id -> VAR','property_id',1,'p_property_id','js_parse.py',1406),
  ('property_id -> CONST','property_id',1,'p_property_id','js_parse.py',1407),
  ('property_id -> LET','property_id',1,'p_property_id','js_parse.py',1408),
  ('property_id -> STATIC','property_id',1,'p_property_id','js_parse.py',1409),
  ('property_id -> YIELD','property_id',1,'p_property_id','js_parse.py',1410),
  ('property_id -> FUNCTION','property_id',1,'p_property_id','js_parse.py',1411),
  ('property_id -> RETURN','property_id',1,'p_property_id','js_parse.py',1412),
  ('property_id -> LSBRACKET expr RSBRACKET','property_id',3,'p_property_id','js_parse.py',1413),
  ('property_id_right -> property_id','property_id_right',1,'p_property_id_right','js_parse.py',1425),
  ('property_id_opt -> property_id property_id','property_id_opt',2,'p_property_id_opt','js_parse.py',1431),
  ('property_id_opt -> property_id','property_id_opt',1,'p_property_id_opt','js_parse.py',1432),
  ('star_opt -> TIMES','star_opt',1,'p_star_opt','js_parse.py',1442),
  ('star_opt -> <empty>','star_opt',0,'p_star_opt','js_parse.py',1443),
  ('method -> star_opt property_id_opt LPAREN funcdeflist RPAREN func_type_opt LBRACKET statementlist_opt RBRACKET','method',9,'p_method','js_parse.py',1453),
  ('getset_id -> property_id','getset_id',1,'p_getset_id','js_parse.py',1493),
  ('getset_id -> NUMBER','getset_id',1,'p_getset_id','js_parse.py',1494),
  ('method_def -> method','method_def',1,'p_method_def','js_parse.py',1500),
  ('var_element -> id','var_element',1,'p_var_element','js_parse.py',1510),
  ('var_element -> SHORT','var_element',1,'p_var_element','js_parse.py',1511),
  ('var_element -> DOUBLE','var_element',1,'p_var_element','js_parse.py',1512),
  ('var_element -> CHAR','var_element',1,'p_var_element','js_parse.py',1513),
  ('var_element -> BYTE','var_element',1,'p_var_element','js_parse.py',1514),
  ('var_element -> id template_ref','var_element',2,'p_var_element','js_parse.py',1515),
  ('var_type2 -> var_element','var_type2',1,'p_var_type2','js_parse.py',1528),
  ('class_property -> var_type2 id','class_property',2,'p_class_property','js_parse.py',1539),
  ('class_property -> class_property ASSIGN expr','class_property',3,'p_class_property','js_parse.py',1540),
  ('class_property -> class_property COMMA id','class_property',3,'p_class_property','js_parse.py',1541),
  ('class_property -> class_property COMMA id ASSIGN expr','class_property',5,'p_class_property','js_parse.py',1542),
  ('setter_param_list -> var_type_opt id','setter_param_list',2,'p_setter_param_list','js_parse.py',1590),
  ('setter_param_list -> var_type','setter_param_list',1,'p_setter_param_list','js_parse.py',1591),
  ('template_ref_opt -> template_ref','template_ref_opt',1,'p_template_ref_opt','js_parse.py',1611),
  ('template_ref_opt -> <empty>','template_ref_opt',0,'p_template_ref_opt','js_parse.py',1612),
  ('func_call -> template_ref_opt LPAREN exprlist RPAREN','func_call',4,'p_func_call','js_parse.py',1620),
  ('func_call -> template_ref_opt LPAREN TRIPLEDOT binding_ident RPAREN','func_call',5,'p_func_call','js_parse.py',1621),
  ('func_call -> template_ref_opt LPAREN expr COMMA TRIPLEDOT binding_ident RPAREN','func_call',7,'p_func_call','js_parse.py',1622),
  ('func_call -> template_ref_opt LPAREN RPAREN','func_call',3,'p_func_call','js_parse.py',1623),
  ('funcdeflist -> var_decl_no_list','funcdeflist',1,'p_funcdeflist','js_parse.py',1645),
  ('funcdeflist -> funcdeflist COMMA var_decl_no_list','funcdeflist',3,'p_funcdeflist','js_parse.py',1646),
  ('funcdeflist -> typescript_var_decl','funcdeflist',1,'p_funcdeflist','js_parse.py',1647),
  ('funcdeflist -> funcdeflist COMMA typescript_var_decl','funcdeflist',3,'p_funcdeflist','js_parse.py',1648),
  ('funcdeflist -> <empty>','funcdeflist',0,'p_funcdeflist','js_parse.py',1649),
  ('template_opt -> template','template_opt',1,'p_template_opt','js_parse.py',1667),
  ('template_opt -> <empty>','template_opt',0,'p_template_opt','js_parse.py',1668),
  ('func_type_opt -> COLON var_type_opt','func_type_opt',2,'p_func_type_opt','js_parse.py',1676),
  ('func_type_opt -> <empty>','func_type_opt',0,'p_func_type_opt','js_parse.py',1677),
  ('funcref -> FUNCTION star_opt id template_opt push_scope LPAREN funcdeflist RPAREN func_type_opt','funcref',9,'p_funcref','js_parse.py',1685),
  ('func_native -> NATIVE push_scope FUNCTION id template_opt LPAREN funcdeflist RPAREN func_type_opt','func_native',9,'p_func_native','js_parse.py',1706),
  ('function -> FUNCTION star_opt id template_opt push_scope LPAREN funcdeflist RPAREN func_type_opt LBRACKET statementlist_opt RBRACKET','function',12,'p_function','js_parse.py',1729),
  ('lbracket_restrict -> LBRACKET','lbracket_restrict',1,'p_lbracket_restrict','js_parse.py',1757),
  ('rbracket_restrict -> RBRACKET','rbracket_restrict',1,'p_rbracket_restrict','js_parse.py',1764),
  ('var_type_opt -> var_type','var_type_opt',1,'p_var_type_opt','js_parse.py',1770),
  ('var_type_opt -> <empty>','var_type_opt',0,'p_var_type_opt','js_parse.py',1771),
  ('colon_opt -> COLON','colon_opt',1,'p_colon_opt','js_parse.py',1777),
  ('colon_opt -> <empty>','colon_opt',0,'p_colon_opt','js_parse.py',1778),
  ('func_name_opt -> ID','func_name_opt',1,'p_func_name_opt','js_parse.py',1784),
  ('func_name_opt -> SET','func_name_opt',1,'p_func_name_opt','js_parse.py',1785),
  ('func_name_opt -> GET','func_name_opt',1,'p_func_name_opt','js_parse.py',1786),
  ('func_name_opt -> SHORT','func_name_opt',1,'p_func_name_opt','js_parse.py',1787),
  ('func_name_opt -> DOUBLE','func_name_opt',1,'p_func_name_opt','js_parse.py',1788),
  ('func_name_opt -> TYPED','func_name_opt',1,'p_func_name_opt','js_parse.py',1789),
  ('func_name_opt -> <empty>','func_name_opt',0,'p_func_name_opt','js_parse.py',1790),
  ('func_name -> ID','func_name',1,'p_func_name','js_parse.py',1798),
  ('func_name -> SET','func_name',1,'p_func_name','js_parse.py',1799),
  ('func_name -> GET','func_name',1,'p_func_name','js_parse.py',1800),
  ('func_name -> SHORT','func_name',1,'p_func_name','js_parse.py',1801),
  ('func_name -> DOUBLE','func_name',1,'p_func_name','js_parse.py',1802),
  ('func_name -> TYPED','func_name',1,'p_func_name','js_parse.py',1803),
  ('exprfunction -> FUNCTION star_opt func_name_opt template_opt push_scope LPAREN funcdeflist RPAREN colon_opt var_type_opt lbracket_restrict statementlist_opt rbracket_restrict','exprfunction',13,'p_exprfunction','js_parse.py',1809),
  ('exprfunction -> FUNCTION star_opt func_name_opt template_opt push_scope LPAREN RPAREN colon_opt var_type_opt lbracket_restrict statementlist_opt rbracket_restrict','exprfunction',12,'p_exprfunction','js_parse.py',1810),
  ('comma_opt -> COMMA','comma_opt',1,'p_comma_opt','js_parse.py',1862),
  ('comma_opt -> <empty>','comma_opt',0,'p_comma_opt','js_parse.py',1863),
  ('expr_for_arraylit -> expr_no_list','expr_for_arraylit',1,'p_expr_for_arraylit','js_parse.py',1867),
  ('expr_for_arraylit -> obj_literal','expr_for_arraylit',1,'p_expr_for_arraylit','js_parse.py',1868),
  ('arraylist -> expr_for_arraylit','arraylist',1,'p_arraylist','js_parse.py',1873),
  ('arraylist -> arraylist expr_for_arraylit','arraylist',2,'p_arraylist','js_parse.py',1874),
  ('arraylist -> arraylist COMMA','arraylist',2,'p_arraylist','js_parse.py',1875),
  ('array_literal -> LSBRACKET arraylist RSBRACKET','array_literal',3,'p_array_literal','js_parse.py',1892),
  ('array_literal -> LSBRACKET RSBRACKET','array_literal',2,'p_array_literal','js_parse.py',1893),
  ('id_str_or_num -> id','id_str_or_num',1,'p_id_str_or_num','js_parse.py',1902),
  ('id_str_or_num -> NUMBER','id_str_or_num',1,'p_id_str_or_num','js_parse.py',1903),
  ('id_str_or_num -> STRINGLIT','id_str_or_num',1,'p_id_str_or_num','js_parse.py',1904),
  ('typeof -> TYPEOF expr','typeof',2,'p_typeof','js_parse.py',1917),
  ('typeof_no_list -> TYPEOF expr_no_list','typeof_no_list',2,'p_typeof_no_list','js_parse.py',1922),
  ('objlit_key -> id_str_or_num','objlit_key',1,'p_objlit_key','js_parse.py',1928),
  ('objlit_key -> LSBRACKET expr RSBRACKET','objlit_key',3,'p_objlit_key','js_parse.py',1929),
  ('obj_lit_list -> objlit_key COLON expr','obj_lit_list',3,'p_obj_lit_list','js_parse.py',1938),
  ('obj_lit_list -> objlit_function','obj_lit_list',1,'p_obj_lit_list','js_parse.py',1939),
  ('obj_lit_list -> obj_lit_list COMMA objlit_function','obj_lit_list',3,'p_obj_lit_list','js_parse.py',1940),
  ('obj_lit_list -> obj_lit_list COMMA objlit_key COLON expr','obj_lit_list',5,'p_obj_lit_list','js_parse.py',1941),
  ('obj_lit_list -> obj_lit_list COMMA','obj_lit_list',2,'p_obj_lit_list','js_parse.py',1942),
  ('obj_literal -> lbracket_restrict push_scope obj_lit_list rbracket_restrict','obj_literal',4,'p_obj_literal','js_parse.py',1960),
  ('obj_literal -> lbracket_restrict rbracket_restrict','obj_literal',2,'p_obj_literal','js_parse.py',1961),
  ('star_opt_2 -> <empty>','star_opt_2',0,'p_star_opt_2','js_parse.py',1972),
  ('star_opt_2 -> TIMES','star_opt_2',1,'p_star_opt_2','js_parse.py',1973),
  ('objlit_function -> TIMES func_name LPAREN funcdeflist RPAREN lbracket_restrict statementlist_opt rbracket_restrict','objlit_function',8,'p_objlit_function','js_parse.py',1980),
  ('objlit_function -> func_name LPAREN funcdeflist RPAREN lbracket_restrict statementlist_opt rbracket_restrict','objlit_function',7,'p_objlit_function','js_parse.py',1981),
  ('delete -> DELETE expr','delete',2,'p_delete','js_parse.py',2008),
  ('new -> NEW expr','new',2,'p_new','js_parse.py',2015),
  ('new_no_list -> NEW expr_no_list','new_no_list',2,'p_new_no_list','js_parse.py',2021),
  ('inc_no_list -> expr_no_list INC','inc_no_list',2,'p_inc_no_list','js_parse.py',2027),
  ('inc_no_list -> INC expr_no_list','inc_no_list',2,'p_inc_no_list','js_parse.py',2028),
  ('dec -> expr DEC','dec',2,'p_dec','js_parse.py',2037),
  ('dec -> DEC expr','dec',2,'p_dec','js_parse.py',2038),
  ('not -> NOT expr','not',2,'p_not','js_parse.py',2048),
  ('inc -> expr INC','inc',2,'p_inc','js_parse.py',2053),
  ('inc -> INC expr','inc',2,'p_inc','js_parse.py',2054),
  ('dec_no_list -> expr_no_list DEC','dec_no_list',2,'p_dec_no_list','js_parse.py',2063),
  ('dec_no_list -> DEC expr_no_list','dec_no_list',2,'p_dec_no_list','js_parse.py',2064),
  ('not_no_list -> NOT expr_no_list','not_no_list',2,'p_not_no_list','js_parse.py',2074),
  ('bitinv_no_list -> BITINV expr_no_list','bitinv_no_list',2,'p_bitinv_no_list','js_parse.py',2079),
  ('bitinv -> BITINV expr','bitinv',2,'p_bitinv','js_parse.py',2084),
  ('strlit -> STRINGLIT','strlit',1,'p_strlit','js_parse.py',2089),
  ('lparen_restrict -> LPAREN','lparen_restrict',1,'p_lparen_restrict','js_parse.py',2094),
  ('rparen_restrict -> RPAREN','rparen_restrict',1,'p_rparen_restrict','js_parse.py',2102),
  ('lsbracket_restrict -> LSBRACKET','lsbracket_restrict',1,'p_lsbracket_restrict','js_parse.py',2110),
  ('rsbracket_restrict -> RSBRACKET','rsbracket_restrict',1,'p_rsbracket_restrict','js_parse.py',2118),
  ('concise_body -> expr_no_list','concise_body',1,'p_concise_body','js_parse.py',2126),
  ('concise_body -> LBRACKET statementlist_opt RBRACKET','concise_body',3,'p_concise_body','js_parse.py',2127),
  ('arrowparamlist_opt -> var_decl_no_list','arrowparamlist_opt',1,'p_arrowparamlist_opt','js_parse.py',2138),
  ('arrowparamlist_opt -> arrowparamlist_opt COMMA var_decl_no_list','arrowparamlist_opt',3,'p_arrowparamlist_opt','js_parse.py',2139),
  ('arrowparamlist_opt -> <empty>','arrowparamlist_opt',0,'p_arrowparamlist_opt','js_parse.py',2140),
  ('arrow_paramlist -> RPAREN expr LPAREN','arrow_paramlist',3,'p_arrow_paramlist','js_parse.py',2163),
  ('arrow_function -> ARROW_PRE arrowparamlist_opt RPAREN ARROW concise_body','arrow_function',5,'p_arrow_function','js_parse.py',2185),
  ('arrow_function -> ID ARROW concise_body','arrow_function',3,'p_arrow_function','js_parse.py',2186),
  ('expr -> NUMBER','expr',1,'p_expr','js_parse.py',2235),
  ('expr -> strlit','expr',1,'p_expr','js_parse.py',2236),
  ('expr -> id','expr',1,'p_expr','js_parse.py',2237),
  ('expr -> id template_ref','expr',2,'p_expr','js_parse.py',2238),
  ('expr -> template_ref','expr',1,'p_expr','js_parse.py',2239),
  ('expr -> array_literal','expr',1,'p_expr','js_parse.py',2240),
  ('expr -> arrow_function','expr',1,'p_expr','js_parse.py',2241),
  ('expr -> exprfunction','expr',1,'p_expr','js_parse.py',2242),
  ('expr -> exprclass','expr',1,'p_expr','js_parse.py',2243),
  ('expr -> obj_literal','expr',1,'p_expr','js_parse.py',2244),
  ('expr -> expr cmplx_assign expr','expr',3,'p_expr','js_parse.py',2245),
  ('expr -> expr cmplx_assign expr COLON var_type SEMI','expr',6,'p_expr','js_parse.py',2246),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr','js_parse.py',2247),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr','js_parse.py',2248),
  ('expr -> expr EXPONENT expr','expr',3,'p_expr','js_parse.py',2249),
  ('expr -> expr LLSHIFT expr','expr',3,'p_expr','js_parse.py',2250),
  ('expr -> expr RRSHIFT expr','expr',3,'p_expr','js_parse.py',2251),
  ('expr -> expr COND_DOT expr','expr',3,'p_expr','js_parse.py',2252),
  ('expr -> expr DOT expr','expr',3,'p_expr','js_parse.py',2253),
  ('expr -> expr DOT DELETE','expr',3,'p_expr','js_parse.py',2254),
  ('expr -> expr LAND expr','expr',3,'p_expr','js_parse.py',2255),
  ('expr -> expr LOR expr','expr',3,'p_expr','js_parse.py',2256),
  ('expr -> expr BOR expr','expr',3,'p_expr','js_parse.py',2257),
  ('expr -> expr INSTANCEOF expr','expr',3,'p_expr','js_parse.py',2258),
  ('expr -> expr BXOR expr','expr',3,'p_expr','js_parse.py',2259),
  ('expr -> expr BAND expr','expr',3,'p_expr','js_parse.py',2260),
  ('expr -> expr EQUAL expr','expr',3,'p_expr','js_parse.py',2261),
  ('expr -> expr EQUAL_STRICT expr','expr',3,'p_expr','js_parse.py',2262),
  ('expr -> expr NOTEQUAL_STRICT expr','expr',3,'p_expr','js_parse.py',2263),
  ('expr -> expr GTHAN expr','expr',3,'p_expr','js_parse.py',2264),
  ('expr -> expr GTHANEQ expr','expr',3,'p_expr','js_parse.py',2265),
  ('expr -> expr LTHAN expr','expr',3,'p_expr','js_parse.py',2266),
  ('expr -> expr MOD expr','expr',3,'p_expr','js_parse.py',2267),
  ('expr -> expr LTHANEQ expr','expr',3,'p_expr','js_parse.py',2268),
  ('expr -> expr NOTEQUAL expr','expr',3,'p_expr','js_parse.py',2269),
  ('expr -> expr PLUS expr','expr',3,'p_expr','js_parse.py',2270),
  ('expr -> expr MINUS expr','expr',3,'p_expr','js_parse.py',2271),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','js_parse.py',2272),
  ('expr -> expr TIMES expr','expr',3,'p_expr','js_parse.py',2273),
  ('expr -> expr IN expr','expr',3,'p_expr','js_parse.py',2274),
  ('expr -> expr func_call','expr',2,'p_expr','js_parse.py',2275),
  ('expr -> expr lsbracket_restrict expr rsbracket_restrict','expr',4,'p_expr','js_parse.py',2276),
  ('expr -> expr QEST expr COLON expr','expr',5,'p_expr','js_parse.py',2277),
  ('expr -> expr COMMA expr','expr',3,'p_expr','js_parse.py',2278),
  ('expr -> lparen_restrict expr rparen_restrict','expr',3,'p_expr','js_parse.py',2279),
  ('expr -> expr_uminus','expr',1,'p_expr','js_parse.py',2280),
  ('expr -> expr_uplus','expr',1,'p_expr','js_parse.py',2281),
  ('expr -> not','expr',1,'p_expr','js_parse.py',2282),
  ('expr -> bitinv','expr',1,'p_expr','js_parse.py',2283),
  ('expr -> new','expr',1,'p_expr','js_parse.py',2284),
  ('expr -> inc','expr',1,'p_expr','js_parse.py',2285),
  ('expr -> dec','expr',1,'p_expr','js_parse.py',2286),
  ('expr -> typeof','expr',1,'p_expr','js_parse.py',2287),
  ('expr -> re_lit','expr',1,'p_expr','js_parse.py',2288),
  ('expr_no_list -> NUMBER','expr_no_list',1,'p_expr_no_list','js_parse.py',2346),
  ('expr_no_list -> strlit','expr_no_list',1,'p_expr_no_list','js_parse.py',2347),
  ('expr_no_list -> id','expr_no_list',1,'p_expr_no_list','js_parse.py',2348),
  ('expr_no_list -> array_literal','expr_no_list',1,'p_expr_no_list','js_parse.py',2349),
  ('expr_no_list -> exprfunction','expr_no_list',1,'p_expr_no_list','js_parse.py',2350),
  ('expr_no_list -> exprclass','expr_no_list',1,'p_expr_no_list','js_parse.py',2351),
  ('expr_no_list -> expr_no_list cmplx_assign expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2352),
  ('expr_no_list -> expr_no_list RSHIFT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2353),
  ('expr_no_list -> expr_no_list LSHIFT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2354),
  ('expr_no_list -> expr_no_list LLSHIFT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2355),
  ('expr_no_list -> expr_no_list RRSHIFT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2356),
  ('expr_no_list -> expr_no_list COND_DOT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2357),
  ('expr_no_list -> expr_no_list DOT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2358),
  ('expr_no_list -> expr_no_list EXPONENT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2359),
  ('expr_no_list -> expr_no_list LAND expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2360),
  ('expr_no_list -> expr_no_list LOR expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2361),
  ('expr_no_list -> expr_no_list BOR expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2362),
  ('expr_no_list -> expr_no_list INSTANCEOF expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2363),
  ('expr_no_list -> expr_no_list BXOR expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2364),
  ('expr_no_list -> expr_no_list BAND expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2365),
  ('expr_no_list -> expr_no_list EQUAL expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2366),
  ('expr_no_list -> expr_no_list EQUAL_STRICT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2367),
  ('expr_no_list -> expr_no_list NOTEQUAL_STRICT expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2368),
  ('expr_no_list -> expr_no_list GTHAN expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2369),
  ('expr_no_list -> expr_no_list GTHANEQ expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2370),
  ('expr_no_list -> expr_no_list LTHAN expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2371),
  ('expr_no_list -> expr_no_list MOD expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2372),
  ('expr_no_list -> expr_no_list LTHANEQ expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2373),
  ('expr_no_list -> expr_no_list NOTEQUAL expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2374),
  ('expr_no_list -> expr_no_list PLUS expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2375),
  ('expr_no_list -> expr_no_list MINUS expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2376),
  ('expr_no_list -> expr_no_list DIVIDE expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2377),
  ('expr_no_list -> expr_no_list TIMES expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2378),
  ('expr_no_list -> expr_no_list IN expr_no_list','expr_no_list',3,'p_expr_no_list','js_parse.py',2379),
  ('expr_no_list -> expr_no_list func_call','expr_no_list',2,'p_expr_no_list','js_parse.py',2380),
  ('expr_no_list -> expr_no_list lsbracket_restrict expr rsbracket_restrict','expr_no_list',4,'p_expr_no_list','js_parse.py',2381),
  ('expr_no_list -> expr_no_list QEST expr_no_list COLON expr_no_list','expr_no_list',5,'p_expr_no_list','js_parse.py',2382),
  ('expr_no_list -> lparen_restrict expr rparen_restrict','expr_no_list',3,'p_expr_no_list','js_parse.py',2383),
  ('expr_no_list -> expr_no_list_uminus','expr_no_list',1,'p_expr_no_list','js_parse.py',2384),
  ('expr_no_list -> expr_no_list_uplus','expr_no_list',1,'p_expr_no_list','js_parse.py',2385),
  ('expr_no_list -> not_no_list','expr_no_list',1,'p_expr_no_list','js_parse.py',2386),
  ('expr_no_list -> bitinv_no_list','expr_no_list',1,'p_expr_no_list','js_parse.py',2387),
  ('expr_no_list -> new_no_list','expr_no_list',1,'p_expr_no_list','js_parse.py',2388),
  ('expr_no_list -> inc_no_list','expr_no_list',1,'p_expr_no_list','js_parse.py',2389),
  ('expr_no_list -> dec_no_list','expr_no_list',1,'p_expr_no_list','js_parse.py',2390),
  ('expr_no_list -> typeof_no_list','expr_no_list',1,'p_expr_no_list','js_parse.py',2391),
  ('expr_no_list -> re_lit','expr_no_list',1,'p_expr_no_list','js_parse.py',2392),
  ('expr_uplus -> PLUS expr','expr_uplus',2,'p_expr_uplus','js_parse.py',2448),
  ('expr_no_list_uplus -> PLUS expr_no_list','expr_no_list_uplus',2,'p_expr_no_list_uplus','js_parse.py',2454),
  ('expr_uminus -> MINUS expr','expr_uminus',2,'p_expr_uminus','js_parse.py',2460),
  ('expr_no_list_uminus -> MINUS expr_no_list','expr_no_list_uminus',2,'p_expr_no_list_uminus','js_parse.py',2466),
  ('paren_expr -> LPAREN expr RPAREN','paren_expr',3,'p_paren_expr','js_parse.py',2472),
  ('paren_expr -> LPAREN RPAREN','paren_expr',2,'p_paren_expr','js_parse.py',2473),
  ('assign_opt -> assign','assign_opt',1,'p_assign_opt','js_parse.py',2482),
  ('assign_opt -> <empty>','assign_opt',0,'p_assign_opt','js_parse.py',2483),
  ('expr_opt -> expr','expr_opt',1,'p_expr_opt','js_parse.py',2492),
  ('expr_opt -> <empty>','expr_opt',0,'p_expr_opt','js_parse.py',2493),
  ('re_lit -> REGEXPR','re_lit',1,'p_re_lit','js_parse.py',2502),
  ('simple_var_decl_strict -> VAR id','simple_var_decl_strict',2,'p_simple_var_decl_strict','js_parse.py',2509),
  ('simple_var_decl_strict -> LET id','simple_var_decl_strict',2,'p_simple_var_decl_strict','js_parse.py',2510),
  ('for_var_decl -> expr_opt','for_var_decl',1,'p_for_var_decl','js_parse.py',2527),
  ('for_var_decl -> simple_var_decl_strict','for_var_decl',1,'p_for_var_decl','js_parse.py',2528),
  ('for_var_decl -> simple_var_decl_strict ASSIGN expr','for_var_decl',3,'p_for_var_decl','js_parse.py',2529),
  ('in_or_of -> IN','in_or_of',1,'p_in_or_of','js_parse.py',2567),
  ('in_or_of -> OF','in_or_of',1,'p_in_or_of','js_parse.py',2568),
  ('for_of_expand -> type_modifiers var_expand OF expr','for_of_expand',4,'p_for_of_expand','js_parse.py',2586),
  ('for_decl -> for_var_decl SEMI expr_opt SEMI expr_opt','for_decl',5,'p_for_decl','js_parse.py',2594),
  ('for_decl -> id in_or_of expr','for_decl',3,'p_for_decl','js_parse.py',2595),
  ('for_decl -> simple_var_decl in_or_of expr','for_decl',3,'p_for_decl','js_parse.py',2596),
  ('for_decl -> for_of_expand','for_decl',1,'p_for_decl','js_parse.py',2597),
  ('loop_label_opt -> <empty>','loop_label_opt',0,'p_loop_label_opt','js_parse.py',2614),
  ('loop_label_opt -> ID COLON','loop_label_opt',2,'p_loop_label_opt','js_parse.py',2615),
  ('for -> loop_label_opt FOR LPAREN for_decl RPAREN statement_nonctrl','for',6,'p_for','js_parse.py',2622),
  ('for -> loop_label_opt FOR LPAREN for_decl RPAREN LBRACKET statementlist_opt RBRACKET','for',8,'p_for','js_parse.py',2623),
  ('ctrl_statement -> statement_nonctrl','ctrl_statement',1,'p_ctrl_statement','js_parse.py',2638),
  ('ctrl_statement -> LBRACKET statementlist_opt RBRACKET','ctrl_statement',3,'p_ctrl_statement','js_parse.py',2639),
  ('ctrl_statement -> SEMI','ctrl_statement',1,'p_ctrl_statement','js_parse.py',2640),
  ('dowhile -> loop_label_opt DO ctrl_statement WHILE paren_expr','dowhile',5,'p_dowhile','js_parse.py',2653),
  ('while -> loop_label_opt WHILE paren_expr statement_nonctrl','while',4,'p_while','js_parse.py',2664),
  ('while -> loop_label_opt WHILE paren_expr LBRACKET statementlist_opt RBRACKET','while',6,'p_while','js_parse.py',2665),
  ('default_case -> DEFAULT COLON statementlist','default_case',3,'p_default_case','js_parse.py',2679),
  ('statementlist_opt -> statementlist','statementlist_opt',1,'p_statementlist_opt','js_parse.py',2685),
  ('statementlist_opt -> <empty>','statementlist_opt',0,'p_statementlist_opt','js_parse.py',2686),
  ('case_clause -> CASE expr COLON statementlist_opt','case_clause',4,'p_case_clause','js_parse.py',2696),
  ('case_clauses -> case_clause','case_clauses',1,'p_case_clauses','js_parse.py',2703),
  ('case_clauses -> case_clauses case_clause','case_clauses',2,'p_case_clauses','js_parse.py',2704),
  ('case_clauses_opt -> case_clauses','case_clauses_opt',1,'p_case_clauses_opt','js_parse.py',2714),
  ('case_clauses_opt -> <empty>','case_clauses_opt',0,'p_case_clauses_opt','js_parse.py',2715),
  ('case_block -> case_clauses','case_block',1,'p_case_block','js_parse.py',2725),
  ('case_block -> case_clauses_opt default_case case_clauses_opt','case_block',3,'p_case_block','js_parse.py',2726),
  ('switch -> SWITCH paren_expr LBRACKET case_block RBRACKET','switch',5,'p_switch','js_parse.py',2743),
  ('with -> WITH paren_expr ctrl_statement','with',3,'p_with','js_parse.py',2751),
  ('if -> IF paren_expr ctrl_statement','if',3,'p_if','js_parse.py',2759),
  ('try -> TRY statement_nonctrl','try',2,'p_try','js_parse.py',2767),
  ('try -> TRY LBRACKET statementlist RBRACKET','try',4,'p_try','js_parse.py',2768),
  ('try -> TRY LBRACKET RBRACKET','try',3,'p_try','js_parse.py',2769),
  ('finally -> FINALLY LBRACKET statementlist_opt RBRACKET','finally',4,'p_finally','js_parse.py',2785),
  ('export_decl -> EXPORT TIMES from_clause SEMI','export_decl',4,'p_export_decl','js_parse.py',2791),
  ('export_decl -> EXPORT export_clause from_clause SEMI','export_decl',4,'p_export_decl','js_parse.py',2792),
  ('export_decl -> EXPORT export_clause SEMI','export_decl',3,'p_export_decl','js_parse.py',2793),
  ('export_decl -> EXPORT var_decl SEMI','export_decl',3,'p_export_decl','js_parse.py',2794),
  ('export_decl -> EXPORT function','export_decl',2,'p_export_decl','js_parse.py',2795),
  ('export_decl -> EXPORT class','export_decl',2,'p_export_decl','js_parse.py',2796),
  ('export_decl -> EXPORT DEFAULT function','export_decl',3,'p_export_decl','js_parse.py',2797),
  ('export_decl -> EXPORT DEFAULT class','export_decl',3,'p_export_decl','js_parse.py',2798),
  ('export_decl -> EXPORT DEFAULT assign','export_decl',3,'p_export_decl','js_parse.py',2799),
  ('export_clause -> LBRACKET RBRACKET','export_clause',2,'p_export_clause','js_parse.py',2876),
  ('export_clause -> LBRACKET exports_list RBRACKET','export_clause',3,'p_export_clause','js_parse.py',2877),
  ('export_clause -> LBRACKET exports_list COMMA RBRACKET','export_clause',4,'p_export_clause','js_parse.py',2878),
  ('exports_list -> export_spec','exports_list',1,'p_exports_list','js_parse.py',2886),
  ('exports_list -> exports_list COMMA export_spec','exports_list',3,'p_exports_list','js_parse.py',2887),
  ('export_spec -> ID','export_spec',1,'p_export_spec','js_parse.py',2899),
  ('export_spec -> ID ID ID','export_spec',3,'p_export_spec','js_parse.py',2900),
  ('catch_tok -> CATCH','catch_tok',1,'p_catch_tok','js_parse.py',2911),
  ('catch -> catch_tok paren_expr statement_nonctrl','catch',3,'p_catch','js_parse.py',2919),
  ('catch -> catch_tok paren_expr LBRACKET statementlist RBRACKET','catch',5,'p_catch','js_parse.py',2920),
  ('else -> ELSE ctrl_statement','else',2,'p_else','js_parse.py',2932),
  ('break -> BREAK','break',1,'p_break','js_parse.py',2940),
  ('break -> BREAK ID','break',2,'p_break','js_parse.py',2941),
  ('continue -> CONTINUE','continue',1,'p_continue','js_parse.py',2950),
  ('continue -> CONTINUE ID','continue',2,'p_continue','js_parse.py',2951),
  ('return -> RETURN expr','return',2,'p_return','js_parse.py',2961),
  ('return -> RETURN','return',1,'p_return','js_parse.py',2962),
  ('yield -> YIELD expr','yield',2,'p_yield','js_parse.py',2972),
  ('yield -> YIELD','yield',1,'p_yield','js_parse.py',2973),
  ('id -> ID','id',1,'p_id','js_parse.py',2984),
  ('id -> GET','id',1,'p_id','js_parse.py',2985),
  ('id -> SET','id',1,'p_id','js_parse.py',2986),
  ('id -> STATIC','id',1,'p_id','js_parse.py',2987),
  ('id -> CATCH','id',1,'p_id','js_parse.py',2988),
  ('id -> GLOBAL','id',1,'p_id','js_parse.py',2989),
  ('id -> AWAIT','id',1,'p_id','js_parse.py',2990),
]
